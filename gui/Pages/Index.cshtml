@page
@using System.Web
@model IndexModel
@{
    ViewData["Title"] = "Sensors";

    var client = new HttpClient();

    const string urlPrefix = "http://127.0.0.1:81/api/";
    const string sensorData = "SensorData?";
    const string sensorDataCount = "SensorData/pages?";
    const string sensorDataCsv = "SensorData/csv?";

    string[] sensorTypes = {"Termometr", "Barometr", "Higrometr", "Fotometr"};
    string[] sensorUnit = {"°C", "hPa", "%", "lm"};

    string[] parameters = {"from", "to", "type", "sensor", "sortBy", "order", "page"};
    var url = parameters.Where(parameter => HttpContext.Request.Query[parameter].ToString().Length > 0).Aggregate(urlPrefix + sensorData, (current, parameter) => current + "&" + parameter + "=" + HttpUtility.UrlEncode(HttpContext.Request.Query[parameter].ToString()));

    var streamTask = client.GetStreamAsync(url);
    var sensors = await JsonSerializer.DeserializeAsync<List<SensorQueueData>>(await streamTask);

    var pages = await JsonSerializer.DeserializeAsync<int>(
        await client.GetStreamAsync(url.Replace(sensorData, sensorDataCount))
        );

    var sensorIds = await JsonSerializer.DeserializeAsync<List<int>>(
        await client.GetStreamAsync(urlPrefix + "SensorData/sensorIdList")
        );
    sensorIds.Sort();
}

<div class="text-center">
    @url
    <form>
        <label>
            Typ czujnika:
            <select name="type" multiple>
                @for (var i = 0; i < sensorTypes.Length; i++)
                {
                    if (HttpContext.Request.Query["type"].Contains(i.ToString()))
                    {
                        <option value="@i" selected>@sensorTypes[i]</option>
                    }
                    else
                    {
                        <option value="@i">@sensorTypes[i]</option>
                    }
                }
            </select>
        </label>
        <label>
            Instancja czujnika:
            <select name="sensor" multiple>
                @foreach (var id in sensorIds)
                {
                    if (HttpContext.Request.Query["sensor"].Contains(id.ToString()))
                    {
                        <option value="@id" selected>Sensor @id</option>
                    }
                    else
                    {
                        <option value="@id">Sensor @id</option>
                    }
                }
            </select>
        </label>
        <label>
            Data od:
            <input name="from" type="datetime-local" value="@HttpContext.Request.Query["from"]"/>
        </label>
        <label>
            Data do:
            <input name="to" type="datetime-local" value="@HttpContext.Request.Query["to"]"/>
        </label>
        <label>
            Sortuj po:
            <select name="sortBy">
                @if (HttpContext.Request.Query["sortBy"].Contains("Value"))
                {
                    <option value="Value" selected>Wartość</option>
                    <option value="Date">Data</option>
                }
                else
                {
                    <option value="Value">Wartość</option>
                    <option value="Date" selected>Data</option>
                }
            </select>
        </label>
        <label>
            Porządek:
            <select name="order">
                @if (HttpContext.Request.Query["order"].Contains("desc"))
                {
                    <option value="asc">Rosnący</option>
                    <option value="desc" selected>Malejący</option>
                }
                else
                {
                    <option value="asc">Rosnący</option>
                    <option value="desc">Malejący</option>
                }
            </select>
        </label>
        <br/>
        <input type="submit" value="Szukaj"/>
    </form>
    <table style="margin: auto">
        <tr>
            <th>Typ</th>
            <th>ID</th>
            <th>Data</th>
            <th>Wartość</th>
        </tr>
        @foreach (var sensor in sensors)
        {
            <tr>
                <td>@sensorTypes[sensor.sensorType]</td>
                <td>@sensor.sensorId</td>
                <td>@String.Format("{0:HH:mm:ss}",sensor.date)</td>
                <td>@sensor.value @sensorUnit[sensor.sensorType]</td>
            </tr>
        }
        @foreach (var key in HttpContext.Request.Query.Keys)
        {
            @HttpContext.Request.Query[key].ToString()
        }
    </table>
    <br/>
    <p>Pobieranie</p>
    <a href="@url.Replace(sensorData, sensorDataCsv)">CSV</a>
    <p>Przejdź do strony:</p>
    @for (var i = 1; i <= pages; i++)
    {
        <a onclick="var queryParams = new URLSearchParams(window.location.search);queryParams.set('page', @i);window.location.href='?'+queryParams.toString();">@i</a>
    }
</div>

<style>
    td {
        padding: 5px;
    }
</style>